[{"path":"/articles/diffeRenTES_vignette.html","id":"what-is-differentes","dir":"Articles","previous_headings":"","what":"What is diffeRenTES?","title":"Getting started","text":"diffeRenTES small package written R focuses primarily computation tree-like structure describing cell differentiation process following mathematical model firstly described work (Villani, Barbieri, Serra 2011).","code":""},{"path":"/articles/diffeRenTES_vignette.html","id":"how-can-you-install-it","dir":"Articles","previous_headings":"","what":"How can you install it?","title":"Getting started","text":"install latest development version diffeRenTES directly GitHub use:","code":"library(devtools) devtools::install_github(\"mbraccini/diffeRenTES\")"},{"path":"/articles/diffeRenTES_vignette.html","id":"how-can-it-be-used","dir":"Articles","previous_headings":"","what":"How can it be used?","title":"Getting started","text":"example purposes random Boolean network using BoolNet R package generated. real world application Boolean network can generated loaded (e.g., using loadNetwork method BoolNet package), long stored object class BooleanNetwork. , Threshold Ergodic Sets (TESs) computed, , remember, represent different cell types model. Lastly, following code saves image computed differentiation tree file system. resulting differentiation tree presented. reports various TESs attractors composed differentiation process emerging reduction intra-cellular noise, synthesized thresholds present direct arcs.","code":"library(diffeRenTES) library(BoolNet) net <- BoolNet::generateRandomNKNetwork(10, 2) attractors <- BoolNet::getAttractors(net)   # Attractors Transition Matrix computation ATM <- getATM(net, attractors, MAX_STEPS_TO_FIND_ATTRACTORS = 100)   # ATM structure in matrix format. # a1, a2, etc. refer to the attractors found. print(ATM$ATM) #>      a1  a2   a3  a4   a5   a6 #> a1 0.30 0.0 0.00 0.1 0.00 0.60 #> a2 0.10 0.4 0.10 0.0 0.00 0.40 #> a3 0.10 0.1 0.40 0.0 0.00 0.40 #> a4 0.10 0.0 0.00 0.3 0.00 0.60 #> a5 0.15 0.0 0.00 0.0 0.45 0.40 #> a6 0.13 0.0 0.03 0.0 0.00 0.83  # No. perturbations that have not reach another attractor within the provided MAX_STEPS_TO_FIND_ATTRACTORS print(ATM$lostFLips) #> [1] 0 #TESs computation TESs <- getTESs(ATM)   #Retrieve the computed TESs print(TESs$TES) #> $level_0 #> $level_0$TES_1 #> [1] \"a1\" \"a2\" \"a3\" \"a4\" \"a6\" #>  #>  #> $level_1 #> $level_1$TES_2 #> [1] \"a1\" \"a4\" \"a6\" #>  #>  #> $level_2 #> $level_2$TES_3 #> [1] \"a1\" \"a6\" #>  #>  #> $level_3 #> $level_3$TES_4 #> [1] \"a6\" #>  #>  #> $level_4 #> $level_4$TES_5 #> [1] \"a6\" #>  #>  #> $level_5 #> $level_5$TES_6 #> [1] \"a6\" #>  #>  #> $level_6 #> $level_6$TES_7 #> [1] \"a2\" #>  #> $level_6$TES_8 #> [1] \"a3\" #>  #> $level_6$TES_9 #> [1] \"a5\" #>  #> $level_6$TES_10 #> [1] \"a6\" #>  #>  #> $level_7 #> $level_7$TES_11 #> [1] \"a2\" #>  #> $level_7$TES_12 #> [1] \"a3\" #>  #> $level_7$TES_13 #> [1] \"a5\" #>  #> $level_7$TES_14 #> [1] \"a6\" #>  #>  #> $level_8 #> $level_8$TES_15 #> [1] \"a1\" #>  #> $level_8$TES_16 #> [1] \"a2\" #>  #> $level_8$TES_17 #> [1] \"a3\" #>  #> $level_8$TES_18 #> [1] \"a4\" #>  #> $level_8$TES_19 #> [1] \"a5\" #>  #> $level_8$TES_20 #> [1] \"a6\" #>  #>  #> $level_9 #> $level_9$TES_21 #> [1] \"a1\" #>  #> $level_9$TES_22 #> [1] \"a2\" #>  #> $level_9$TES_23 #> [1] \"a3\" #>  #> $level_9$TES_24 #> [1] \"a4\" #>  #> $level_9$TES_25 #> [1] \"a5\" #>  #> $level_9$TES_26 #> [1] \"a6\"  #And the noise thresholds at which they emerge. print(TESs$thresholds) #>  [1] 0.00 0.03 0.10 0.13 0.15 0.30 0.40 0.45 0.60 0.83 # Saving the TES-based differentiation tree into a file saveDifferentiationTreeToFile(TESs, file.path(tempdir(), \"example.svg\"))"},{"path":"/articles/diffeRenTES_vignette.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Getting started","text":"Villani, Marco, Alessia Barbieri, Roberto Serra. 2011. “Dynamical Model Genetic Networks Cell Differentiation.” PLOS ONE 6 (3): 1–9. https://doi.org/10.1371/journal.pone.0017703.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michele Braccini. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Braccini M (2022). diffeRenTES: Computation TES-Based Cell Differentiation Trees. R package version 0.3.2.9000.","code":"@Manual{,   title = {diffeRenTES: Computation of TES-Based Cell Differentiation Trees},   author = {Michele Braccini},   year = {2022},   note = {R package version 0.3.2.9000}, }"},{"path":[]},{"path":"/index.html","id":"what-is-it","dir":"","previous_headings":"","what":"What is it?","title":"Computation of TES-Based Cell Differentiation Trees","text":"diffeRenTES (French various, different) package written R , starting Boolean networks BoolNet package, computes ATM (Attractor Transition Matrix) structure tree-like structure, based TES concept, describing cell differentiation process. TESs (Threshold Ergodic Sets) mathematical abstractions represent different cell types arising ontogenesis. TESs powerful model biological differentiation based Boolean networks belongs firstly described “Dynamical Model Genetic Networks Cell Differentiation” Villani M, Barbieri , Serra R (2011) Dynamical Model Genetic Networks Cell Differentiation. PLOS ONE 6 (3): e17703. https://doi.org/10.1371/journal.pone.0017703","code":""},{"path":"/index.html","id":"package-installation","dir":"","previous_headings":"","what":"Package installation","title":"Computation of TES-Based Cell Differentiation Trees","text":"package requires following R libraries: BoolNet igraph DOT , alternatively, directly GitHub:","code":"install.packages(\"diffeRenTES_RELEASE_VERSION.tar.gz\", repos = NULL, type=\"source\") library(devtools) devtools::install_github(\"mbraccini/diffeRenTES\")"},{"path":"/index.html","id":"quick-tutorial","dir":"","previous_headings":"","what":"Quick tutorial","title":"Computation of TES-Based Cell Differentiation Trees","text":"","code":"#Boolean network generation by means of 'BoolNet' package net <- BoolNet::generateRandomNKNetwork(10, 2)  #Attractors computation attractors <- BoolNet::getAttractors(net)   #Attractors Transition Matrix computation ATM <- getATM(net, attractors)  #TESs computation TESs <- getTESs(ATM)  #Saving the image of the TES-based differentiation tree saveDifferentiationTreeToFile(TESs, \"example.svg\")"},{"path":"/reference/getATM.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute ATM — getATM","title":"Compute ATM — getATM","text":"getATM returns ATM (Attractor Transition Matrix) structure. ATM computes probability transition attractors Boolean network upon introduction noise form logic negation node state attractor,  checking attractor dynamics relaxes. diagonal ATM accounts attractor robustness, diagonal values represent probability returning attractor perturbation.","code":""},{"path":"/reference/getATM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute ATM — getATM","text":"","code":"getATM(net, synchronous_attractors, MAX_STEPS_TO_FIND_ATTRACTORS = 1000)"},{"path":"/reference/getATM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute ATM — getATM","text":"net Boolean network previously loaded loadNetwork() BoolNet package synchronous_attractors Synchronous attractors Boolean network MAX_STEPS_TO_FIND_ATTRACTORS Number steps dynamics perturbation gives ","code":""},{"path":"/reference/getATM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute ATM — getATM","text":"output named list containing computed ATM structure, number lost flips (.e., number perturbations reach another attractor within provided MAX_STEPS_TO_FIND_ATTRACTORS), lastly attractors two formats: one returned BoolNet package (called decimal) binary translation (called binary).","code":""},{"path":"/reference/getATM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute ATM — getATM","text":"","code":"net <- BoolNet::generateRandomNKNetwork(10, 2) attractors <- BoolNet::getAttractors(net) getATM(net, attractors) #> $ATM #>      a1   a2   a3 #> a1 0.60 0.20 0.20 #> a2 0.30 0.50 0.20 #> a3 0.26 0.17 0.57 #>  #> $lostFLips #> [1] 0 #>  #> $attractors #> $attractors$decimal #> $attractors$decimal$a1 #> $attractors$decimal$a1$involvedStates #>      [,1] #> [1,]   32 #>  #> $attractors$decimal$a1$basinSize #> [1] 420 #>  #>  #> $attractors$decimal$a2 #> $attractors$decimal$a2$involvedStates #>      [,1] [,2] [,3] #> [1,]    2  549  160 #>  #> $attractors$decimal$a2$basinSize #> [1] 318 #>  #>  #> $attractors$decimal$a3 #> $attractors$decimal$a3$involvedStates #>      [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #> [1,]    4  181   99  800   40   36  176   67  805   168 #>  #> $attractors$decimal$a3$basinSize #> [1] 286 #>  #>  #>  #> $attractors$binary #> $attractors$binary$a1 #>        [,1] #> Gene1     0 #> Gene2     0 #> Gene3     0 #> Gene4     0 #> Gene5     0 #> Gene6     1 #> Gene7     0 #> Gene8     0 #> Gene9     0 #> Gene10    0 #>  #> $attractors$binary$a2 #>        [,1] [,2] [,3] #> Gene1     0    1    0 #> Gene2     1    0    0 #> Gene3     0    1    0 #> Gene4     0    0    0 #> Gene5     0    0    0 #> Gene6     0    1    1 #> Gene7     0    0    0 #> Gene8     0    0    1 #> Gene9     0    0    0 #> Gene10    0    1    0 #>  #> $attractors$binary$a3 #>        [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #> Gene1     0    1    1    0    0    0    0    1    1     0 #> Gene2     0    0    1    0    0    0    0    1    0     0 #> Gene3     1    1    0    0    0    1    0    0    1     0 #> Gene4     0    0    0    0    1    0    0    0    0     1 #> Gene5     0    1    0    0    0    0    1    0    0     0 #> Gene6     0    1    1    1    1    1    1    0    1     1 #> Gene7     0    0    1    0    0    0    0    1    0     0 #> Gene8     0    1    0    0    0    0    1    0    0     1 #> Gene9     0    0    0    1    0    0    0    0    1     0 #> Gene10    0    0    0    1    0    0    0    0    1     0 #>  #>  #>"},{"path":"/reference/getTESs.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute TES — getTESs","title":"Compute TES — getTESs","text":"Creates structure constructing TES described \"Dynamical Model Genetic Networks Cell Differentiation Villani M, Barbieri , Serra R (2011) Dynamical Model Genetic Networks Cell Differentiation. PLOS ONE 6(3): e17703. https://doi.org/10.1371/journal.pone.0017703\"","code":""},{"path":"/reference/getTESs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute TES — getTESs","text":"","code":"getTESs(ATM)"},{"path":"/reference/getTESs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute TES — getTESs","text":"ATM ATM structure returned getATM method.","code":""},{"path":"/reference/getTESs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute TES — getTESs","text":"output named list contains list computed TESs, noise thresholds emerged lastly ATM structure.","code":""},{"path":"/reference/getTESs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute TES — getTESs","text":"","code":"net <- BoolNet::generateRandomNKNetwork(10, 2) attractors <- BoolNet::getAttractors(net) ATM <- getATM(net, attractors) getTESs(ATM) #> $TES #> $TES$level_0 #> $TES$level_0$TES_1 #>  [1] \"a1\"  \"a2\"  \"a3\"  \"a4\"  \"a5\"  \"a6\"  \"a7\"  \"a8\"  \"a9\"  \"a10\" \"a11\" \"a12\" #>  #>  #> $TES$level_1 #> $TES$level_1$TES_2 #> [1] \"a9\"  \"a10\" \"a11\" \"a12\" #>  #>  #> $TES$level_2 #> $TES$level_2$TES_3 #> [1] \"a9\"  \"a10\" \"a11\" \"a12\" #>  #>  #> $TES$level_3 #> $TES$level_3$TES_4 #> [1] \"a8\" #>  #> $TES$level_3$TES_5 #> [1] \"a9\"  \"a10\" \"a11\" \"a12\" #>  #>  #> $TES$level_4 #> $TES$level_4$TES_6 #> [1] \"a1\" #>  #> $TES$level_4$TES_7 #> [1] \"a2\" #>  #> $TES$level_4$TES_8 #> [1] \"a3\" #>  #> $TES$level_4$TES_9 #> [1] \"a4\" #>  #> $TES$level_4$TES_10 #> [1] \"a5\" \"a6\" #>  #> $TES$level_4$TES_11 #> [1] \"a7\" #>  #> $TES$level_4$TES_12 #> [1] \"a8\" #>  #> $TES$level_4$TES_13 #> [1] \"a9\"  \"a11\" #>  #>  #> $TES$level_5 #> $TES$level_5$TES_14 #> [1] \"a1\" #>  #> $TES$level_5$TES_15 #> [1] \"a2\" #>  #> $TES$level_5$TES_16 #> [1] \"a3\" #>  #> $TES$level_5$TES_17 #> [1] \"a4\" #>  #> $TES$level_5$TES_18 #> [1] \"a5\" #>  #> $TES$level_5$TES_19 #> [1] \"a6\" #>  #> $TES$level_5$TES_20 #> [1] \"a7\" #>  #> $TES$level_5$TES_21 #> [1] \"a8\" #>  #> $TES$level_5$TES_22 #> [1] \"a9\"  \"a11\" #>  #>  #> $TES$level_6 #> $TES$level_6$TES_23 #> [1] \"a1\" #>  #> $TES$level_6$TES_24 #> [1] \"a2\" #>  #> $TES$level_6$TES_25 #> [1] \"a3\" #>  #> $TES$level_6$TES_26 #> [1] \"a4\" #>  #> $TES$level_6$TES_27 #> [1] \"a5\" #>  #> $TES$level_6$TES_28 #> [1] \"a6\" #>  #> $TES$level_6$TES_29 #> [1] \"a7\" #>  #> $TES$level_6$TES_30 #> [1] \"a8\" #>  #> $TES$level_6$TES_31 #> [1] \"a9\"  \"a11\" #>  #> $TES$level_6$TES_32 #> [1] \"a10\" #>  #> $TES$level_6$TES_33 #> [1] \"a12\" #>  #>  #> $TES$level_7 #> $TES$level_7$TES_34 #> [1] \"a1\" #>  #> $TES$level_7$TES_35 #> [1] \"a2\" #>  #> $TES$level_7$TES_36 #> [1] \"a3\" #>  #> $TES$level_7$TES_37 #> [1] \"a4\" #>  #> $TES$level_7$TES_38 #> [1] \"a5\" #>  #> $TES$level_7$TES_39 #> [1] \"a6\" #>  #> $TES$level_7$TES_40 #> [1] \"a7\" #>  #> $TES$level_7$TES_41 #> [1] \"a8\" #>  #> $TES$level_7$TES_42 #> [1] \"a9\" #>  #> $TES$level_7$TES_43 #> [1] \"a10\" #>  #> $TES$level_7$TES_44 #> [1] \"a12\" #>  #>  #> $TES$level_8 #> $TES$level_8$TES_45 #> [1] \"a1\" #>  #> $TES$level_8$TES_46 #> [1] \"a2\" #>  #> $TES$level_8$TES_47 #> [1] \"a3\" #>  #> $TES$level_8$TES_48 #> [1] \"a4\" #>  #> $TES$level_8$TES_49 #> [1] \"a5\" #>  #> $TES$level_8$TES_50 #> [1] \"a6\" #>  #> $TES$level_8$TES_51 #> [1] \"a7\" #>  #> $TES$level_8$TES_52 #> [1] \"a8\" #>  #> $TES$level_8$TES_53 #> [1] \"a9\" #>  #> $TES$level_8$TES_54 #> [1] \"a10\" #>  #> $TES$level_8$TES_55 #> [1] \"a11\" #>  #> $TES$level_8$TES_56 #> [1] \"a12\" #>  #>  #>  #> $thresholds #> [1] 0.00 0.03 0.05 0.10 0.15 0.20 0.30 0.35 0.40 #>  #> $ATM #> $ATM$ATM #>       a1   a2   a3   a4   a5   a6   a7   a8   a9  a10  a11  a12 #> a1  0.30 0.15 0.10 0.00 0.10 0.00 0.10 0.00 0.15 0.00 0.10 0.00 #> a2  0.15 0.30 0.00 0.10 0.00 0.10 0.00 0.10 0.10 0.05 0.05 0.05 #> a3  0.10 0.00 0.30 0.15 0.10 0.00 0.10 0.00 0.15 0.00 0.10 0.00 #> a4  0.00 0.10 0.15 0.30 0.00 0.10 0.00 0.10 0.10 0.05 0.05 0.05 #> a5  0.10 0.00 0.10 0.00 0.40 0.20 0.00 0.00 0.15 0.00 0.05 0.00 #> a6  0.00 0.10 0.00 0.10 0.20 0.40 0.00 0.00 0.10 0.05 0.00 0.05 #> a7  0.10 0.00 0.10 0.00 0.00 0.00 0.40 0.10 0.15 0.00 0.15 0.00 #> a8  0.00 0.10 0.00 0.10 0.00 0.00 0.10 0.40 0.10 0.05 0.10 0.05 #> a9  0.03 0.00 0.03 0.00 0.03 0.00 0.03 0.00 0.40 0.15 0.35 0.00 #> a10 0.00 0.03 0.00 0.03 0.00 0.03 0.00 0.03 0.30 0.30 0.00 0.30 #> a11 0.03 0.00 0.03 0.00 0.03 0.00 0.03 0.00 0.40 0.00 0.35 0.15 #> a12 0.00 0.03 0.00 0.03 0.00 0.03 0.00 0.03 0.15 0.30 0.15 0.30 #>  #> $ATM$lostFLips #> [1] 0 #>  #> $ATM$attractors #> $ATM$attractors$decimal #> $ATM$attractors$decimal$a1 #> $ATM$attractors$decimal$a1$involvedStates #>      [,1] [,2] #> [1,]   18  666 #>  #> $ATM$attractors$decimal$a1$basinSize #> [1] 24 #>  #>  #> $ATM$attractors$decimal$a2 #> $ATM$attractors$decimal$a2$involvedStates #>      [,1] [,2] #> [1,]   19  667 #>  #> $ATM$attractors$decimal$a2$basinSize #> [1] 24 #>  #>  #> $ATM$attractors$decimal$a3 #> $ATM$attractors$decimal$a3$involvedStates #>      [,1] [,2] #> [1,]   26  658 #>  #> $ATM$attractors$decimal$a3$basinSize #> [1] 24 #>  #>  #> $ATM$attractors$decimal$a4 #> $ATM$attractors$decimal$a4$involvedStates #>      [,1] [,2] #> [1,]   27  659 #>  #> $ATM$attractors$decimal$a4$basinSize #> [1] 24 #>  #>  #> $ATM$attractors$decimal$a5 #> $ATM$attractors$decimal$a5$involvedStates #>      [,1] [,2] #> [1,]  146  154 #>  #> $ATM$attractors$decimal$a5$basinSize #> [1] 32 #>  #>  #> $ATM$attractors$decimal$a6 #> $ATM$attractors$decimal$a6$involvedStates #>      [,1] [,2] #> [1,]  147  155 #>  #> $ATM$attractors$decimal$a6$basinSize #> [1] 32 #>  #>  #> $ATM$attractors$decimal$a7 #> $ATM$attractors$decimal$a7$involvedStates #>      [,1] [,2] #> [1,]  530  538 #>  #> $ATM$attractors$decimal$a7$basinSize #> [1] 16 #>  #>  #> $ATM$attractors$decimal$a8 #> $ATM$attractors$decimal$a8$involvedStates #>      [,1] [,2] #> [1,]  531  539 #>  #> $ATM$attractors$decimal$a8$basinSize #> [1] 16 #>  #>  #> $ATM$attractors$decimal$a9 #> $ATM$attractors$decimal$a9$involvedStates #>      [,1] [,2] [,3] [,4] #> [1,]    2  522  642  138 #>  #> $ATM$attractors$decimal$a9$basinSize #> [1] 464 #>  #>  #> $ATM$attractors$decimal$a10 #> $ATM$attractors$decimal$a10$involvedStates #>      [,1] [,2] [,3] [,4] #> [1,]    3  523  643  139 #>  #> $ATM$attractors$decimal$a10$basinSize #> [1] 112 #>  #>  #> $ATM$attractors$decimal$a11 #> $ATM$attractors$decimal$a11$involvedStates #>      [,1] [,2] [,3] [,4] #> [1,]   10  514  650  130 #>  #> $ATM$attractors$decimal$a11$basinSize #> [1] 144 #>  #>  #> $ATM$attractors$decimal$a12 #> $ATM$attractors$decimal$a12$involvedStates #>      [,1] [,2] [,3] [,4] #> [1,]   11  515  651  131 #>  #> $ATM$attractors$decimal$a12$basinSize #> [1] 112 #>  #>  #>  #> $ATM$attractors$binary #> $ATM$attractors$binary$a1 #>        [,1] [,2] #> Gene1     0    0 #> Gene2     1    1 #> Gene3     0    0 #> Gene4     0    1 #> Gene5     1    1 #> Gene6     0    0 #> Gene7     0    0 #> Gene8     0    1 #> Gene9     0    0 #> Gene10    0    1 #>  #> $ATM$attractors$binary$a2 #>        [,1] [,2] #> Gene1     1    1 #> Gene2     1    1 #> Gene3     0    0 #> Gene4     0    1 #> Gene5     1    1 #> Gene6     0    0 #> Gene7     0    0 #> Gene8     0    1 #> Gene9     0    0 #> Gene10    0    1 #>  #> $ATM$attractors$binary$a3 #>        [,1] [,2] #> Gene1     0    0 #> Gene2     1    1 #> Gene3     0    0 #> Gene4     1    0 #> Gene5     1    1 #> Gene6     0    0 #> Gene7     0    0 #> Gene8     0    1 #> Gene9     0    0 #> Gene10    0    1 #>  #> $ATM$attractors$binary$a4 #>        [,1] [,2] #> Gene1     1    1 #> Gene2     1    1 #> Gene3     0    0 #> Gene4     1    0 #> Gene5     1    1 #> Gene6     0    0 #> Gene7     0    0 #> Gene8     0    1 #> Gene9     0    0 #> Gene10    0    1 #>  #> $ATM$attractors$binary$a5 #>        [,1] [,2] #> Gene1     0    0 #> Gene2     1    1 #> Gene3     0    0 #> Gene4     0    1 #> Gene5     1    1 #> Gene6     0    0 #> Gene7     0    0 #> Gene8     1    1 #> Gene9     0    0 #> Gene10    0    0 #>  #> $ATM$attractors$binary$a6 #>        [,1] [,2] #> Gene1     1    1 #> Gene2     1    1 #> Gene3     0    0 #> Gene4     0    1 #> Gene5     1    1 #> Gene6     0    0 #> Gene7     0    0 #> Gene8     1    1 #> Gene9     0    0 #> Gene10    0    0 #>  #> $ATM$attractors$binary$a7 #>        [,1] [,2] #> Gene1     0    0 #> Gene2     1    1 #> Gene3     0    0 #> Gene4     0    1 #> Gene5     1    1 #> Gene6     0    0 #> Gene7     0    0 #> Gene8     0    0 #> Gene9     0    0 #> Gene10    1    1 #>  #> $ATM$attractors$binary$a8 #>        [,1] [,2] #> Gene1     1    1 #> Gene2     1    1 #> Gene3     0    0 #> Gene4     0    1 #> Gene5     1    1 #> Gene6     0    0 #> Gene7     0    0 #> Gene8     0    0 #> Gene9     0    0 #> Gene10    1    1 #>  #> $ATM$attractors$binary$a9 #>        [,1] [,2] [,3] [,4] #> Gene1     0    0    0    0 #> Gene2     1    1    1    1 #> Gene3     0    0    0    0 #> Gene4     0    1    0    1 #> Gene5     0    0    0    0 #> Gene6     0    0    0    0 #> Gene7     0    0    0    0 #> Gene8     0    0    1    1 #> Gene9     0    0    0    0 #> Gene10    0    1    1    0 #>  #> $ATM$attractors$binary$a10 #>        [,1] [,2] [,3] [,4] #> Gene1     1    1    1    1 #> Gene2     1    1    1    1 #> Gene3     0    0    0    0 #> Gene4     0    1    0    1 #> Gene5     0    0    0    0 #> Gene6     0    0    0    0 #> Gene7     0    0    0    0 #> Gene8     0    0    1    1 #> Gene9     0    0    0    0 #> Gene10    0    1    1    0 #>  #> $ATM$attractors$binary$a11 #>        [,1] [,2] [,3] [,4] #> Gene1     0    0    0    0 #> Gene2     1    1    1    1 #> Gene3     0    0    0    0 #> Gene4     1    0    1    0 #> Gene5     0    0    0    0 #> Gene6     0    0    0    0 #> Gene7     0    0    0    0 #> Gene8     0    0    1    1 #> Gene9     0    0    0    0 #> Gene10    0    1    1    0 #>  #> $ATM$attractors$binary$a12 #>        [,1] [,2] [,3] [,4] #> Gene1     1    1    1    1 #> Gene2     1    1    1    1 #> Gene3     0    0    0    0 #> Gene4     1    0    1    0 #> Gene5     0    0    0    0 #> Gene6     0    0    0    0 #> Gene7     0    0    0    0 #> Gene8     0    0    1    1 #> Gene9     0    0    0    0 #> Gene10    0    1    1    0 #>  #>  #>  #>"},{"path":"/reference/saveDifferentiationTreeToFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Save the graphic representation of the differentiation tree. — saveDifferentiationTreeToFile","title":"Save the graphic representation of the differentiation tree. — saveDifferentiationTreeToFile","text":"saveDifferentiationTreeToFile saves image computed differentiation tree file.","code":""},{"path":"/reference/saveDifferentiationTreeToFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save the graphic representation of the differentiation tree. — saveDifferentiationTreeToFile","text":"","code":"saveDifferentiationTreeToFile(TESs, filename)"},{"path":"/reference/saveDifferentiationTreeToFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save the graphic representation of the differentiation tree. — saveDifferentiationTreeToFile","text":"TESs TES structure computed getTESs. filename Defines filename exporting image differentiation tree. file extension accepted \"svg\", filenames omitting extensions extensions forced SVG format.","code":""},{"path":"/reference/saveDifferentiationTreeToFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save the graphic representation of the differentiation tree. — saveDifferentiationTreeToFile","text":"None","code":""},{"path":"/reference/saveDifferentiationTreeToFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save the graphic representation of the differentiation tree. — saveDifferentiationTreeToFile","text":"","code":"net <- BoolNet::generateRandomNKNetwork(10, 2) attractors <- BoolNet::getAttractors(net) ATM <- getATM(net, attractors) TESs <- getTESs(ATM) saveDifferentiationTreeToFile(TESs, tempfile(tmpdir = tempdir(), fileext = \".svg\"))"},{"path":"/news/index.html","id":"differentes-032","dir":"Changelog","previous_headings":"","what":"diffeRenTES 0.3.2","title":"diffeRenTES 0.3.2","text":"CRAN release: 2022-04-28 CRAN resubmission","code":""},{"path":"/news/index.html","id":"differentes-031","dir":"Changelog","previous_headings":"","what":"diffeRenTES 0.3.1","title":"diffeRenTES 0.3.1","text":"Minor bugfixes CRAN submission","code":""},{"path":"/news/index.html","id":"differentes-030","dir":"Changelog","previous_headings":"","what":"diffeRenTES 0.3.0","title":"diffeRenTES 0.3.0","text":"Preparation CRAN submission","code":""},{"path":"/news/index.html","id":"differentes-022","dir":"Changelog","previous_headings":"","what":"diffeRenTES 0.2.2","title":"diffeRenTES 0.2.2","text":"New tests added","code":""},{"path":"/news/index.html","id":"differentes-021","dir":"Changelog","previous_headings":"","what":"diffeRenTES 0.2.1","title":"diffeRenTES 0.2.1","text":"Minor bugfixes","code":""},{"path":"/news/index.html","id":"differentes-020","dir":"Changelog","previous_headings":"","what":"diffeRenTES 0.2.0","title":"diffeRenTES 0.2.0","text":"API changed introduced function retrieving DOT representation differentiation tree computed","code":""},{"path":"/news/index.html","id":"differentes-010","dir":"Changelog","previous_headings":"","what":"diffeRenTES 0.1.0","title":"diffeRenTES 0.1.0","text":"Initial Release GitHub","code":""}]
