[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michele Braccini. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Braccini M (2022). diffeRenTES: Computation Attractor Transition Matrix (ATM) Threshold Ergodic Set-Based Cell Differentiation Process (Synchronous) Boolean Networks. R package version 0.2.2.","code":"@Manual{,   title = {diffeRenTES: Computation of Attractor Transition Matrix (ATM) and Threshold Ergodic Set-Based Cell Differentiation Process from (Synchronous) Boolean Networks},   author = {Michele Braccini},   year = {2022},   note = {R package version 0.2.2}, }"},{"path":[]},{"path":"/index.html","id":"what-is-it","dir":"","previous_headings":"","what":"What is it?","title":"Computation of Attractor Transition Matrix (ATM) and Threshold Ergodic Set-Based Cell Differentiation Process from (Synchronous) Boolean Networks","text":"diffeRenTES (French various, different, separate) package written R , starting Boolean networks BoolNet package, computes ATM (Attractor Transition Matrix) structure tree-like structure, based TES concept, describing cell differentiation process. TESs (Threshold Ergodic Sets) mathematical abstractions represent different cell types arising ontogenesis. TESs powerful model biological differentiation based Boolean networks belongs firstly described “Dynamical Model Genetic Networks Cell Differentiation” Villani M, Barbieri , Serra R (2011) Dynamical Model Genetic Networks Cell Differentiation. PLOS ONE 6 (3): e17703. https://doi.org/10.1371/journal.pone.0017703","code":""},{"path":"/index.html","id":"package-installation","dir":"","previous_headings":"","what":"Package installation","title":"Computation of Attractor Transition Matrix (ATM) and Threshold Ergodic Set-Based Cell Differentiation Process from (Synchronous) Boolean Networks","text":"package requires folowing R libraries: BoolNet igraph DOT","code":"install.packages(\"diffeRenTES_RELEASE_VERSION.tar.gz\", repos = NULL, type=\"source\")"},{"path":"/index.html","id":"quick-tutorial","dir":"","previous_headings":"","what":"Quick tutorial","title":"Computation of Attractor Transition Matrix (ATM) and Threshold Ergodic Set-Based Cell Differentiation Process from (Synchronous) Boolean Networks","text":"","code":"net <- BoolNet::generateRandomNKNetwork(10, 2)     attractors <- BoolNet::getAttractors(net)      ATM <- computeATM(net, attractors) # attractors transition matrix computation     TESs <- computeTESs(ATM) #TESs computation     saveDotFileDifferentiationTree(TESs, \"exampleTree\") #saving the TES-based differentiation tree"},{"path":"/reference/getATM.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute ATM — getATM","title":"Compute ATM — getATM","text":"getATM returns ATM (Attractor Transistion Matrix) structure.  ATM computes probability transition attractors Boolean network upon introduction noise form logic negation node state attractor,  checking attractor dynamics relaxes. diagonal ATM accounts attractor robustness, diagonal values represent probability returning attractor perturbation.","code":""},{"path":"/reference/getATM.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute ATM — getATM","text":"","code":"getATM(net, syncAttractors, MAX_STEPS_TO_FIND_ATTRACTORS = 1000)"},{"path":"/reference/getATM.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute ATM — getATM","text":"net Boolean network previously loaded loadNetwork() BoolNet package syncAttractors Synchronous attractors Boolean network MAX_STEPS_TO_FIND_ATTRACTORS Number steps dynamics perturbation gives ","code":""},{"path":"/reference/getATM.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute ATM — getATM","text":"output named list containing computed ATM structure, number lost flips (.e., number perturbations reach another attractor within provided MAX_STEPS_TO_FIND_ATTRACTORS), lastly attractors two formats: one returned BoolNet package (called decimal) binary translation (called binary).","code":""},{"path":"/reference/getATM.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute ATM — getATM","text":"","code":"net <- BoolNet::generateRandomNKNetwork(10, 2) attractors <- BoolNet::getAttractors(net)  getATM(net, attractors) #> $ATM #>      a1   a2  a3 #> a1 0.95 0.05 0.0 #> a2 0.45 0.45 0.1 #> a3 0.35 0.25 0.4 #>  #> $lostFLips #> [1] 0 #>  #> $attractors #> $attractors$decimal #> $attractors$decimal$a1 #> $attractors$decimal$a1$involvedStates #>      [,1] [,2] #> [1,]  432  521 #>  #> $attractors$decimal$a1$basinSize #> [1] 740 #>  #>  #> $attractors$decimal$a2 #> $attractors$decimal$a2$involvedStates #>      [,1] [,2] #> [1,]  676  772 #>  #> $attractors$decimal$a2$basinSize #> [1] 224 #>  #>  #> $attractors$decimal$a3 #> $attractors$decimal$a3$involvedStates #>      [,1] [,2] #> [1,]  756  854 #>  #> $attractors$decimal$a3$basinSize #> [1] 60 #>  #>  #>  #> $attractors$binary #> $attractors$binary$a1 #>        [,1] [,2] #> Gene1     0    1 #> Gene2     0    0 #> Gene3     0    0 #> Gene4     0    1 #> Gene5     1    0 #> Gene6     1    0 #> Gene7     0    0 #> Gene8     1    0 #> Gene9     1    0 #> Gene10    0    1 #>  #> $attractors$binary$a2 #>        [,1] [,2] #> Gene1     0    0 #> Gene2     0    0 #> Gene3     1    1 #> Gene4     0    0 #> Gene5     0    0 #> Gene6     1    0 #> Gene7     0    0 #> Gene8     1    0 #> Gene9     0    1 #> Gene10    1    1 #>  #> $attractors$binary$a3 #>        [,1] [,2] #> Gene1     0    0 #> Gene2     0    1 #> Gene3     1    1 #> Gene4     0    0 #> Gene5     1    1 #> Gene6     1    0 #> Gene7     1    1 #> Gene8     1    0 #> Gene9     0    1 #> Gene10    1    1 #>  #>  #>"},{"path":"/reference/getDifferentiationTreeAsDOTString.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a DOT tree-like representation of the TESs — getDifferentiationTreeAsDOTString","title":"Generates a DOT tree-like representation of the TESs — getDifferentiationTreeAsDOTString","text":"getDifferentiationTreeAsDOTString returns description computed TES-based differentiation tree using DOT Language. returned DOT description can passed saveDotFileDifferentiationTree order save file local filesystem.","code":""},{"path":"/reference/getDifferentiationTreeAsDOTString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a DOT tree-like representation of the TESs — getDifferentiationTreeAsDOTString","text":"","code":"getDifferentiationTreeAsDOTString(TESs)"},{"path":"/reference/getDifferentiationTreeAsDOTString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a DOT tree-like representation of the TESs — getDifferentiationTreeAsDOTString","text":"TESs TES structure computed getTESs","code":""},{"path":"/reference/getDifferentiationTreeAsDOTString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a DOT tree-like representation of the TESs — getDifferentiationTreeAsDOTString","text":"string describe computed TES-based differentiation tree using DOT Language.","code":""},{"path":"/reference/getDifferentiationTreeAsDOTString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generates a DOT tree-like representation of the TESs — getDifferentiationTreeAsDOTString","text":"","code":"net <- BoolNet::generateRandomNKNetwork(10, 2) attractors <- BoolNet::getAttractors(net)  ATM <- getATM(net, attractors) TESs <- getTESs(ATM)  #> [1] \"There is no threshold value equal to 0 in the ATM, I will add it for the TESs computation\" dotString <- getDifferentiationTreeAsDOTString"},{"path":"/reference/getTESs.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute TES — getTESs","title":"Compute TES — getTESs","text":"Creates structure constructing TES described \"Dynamical Model Genetic Networks Cell Differentiation  Villani M, Barbieri , Serra R (2011) Dynamical Model Genetic Networks Cell Differentiation. PLOS ONE 6(3): e17703. https://doi.org/10.1371/journal.pone.0017703\"","code":""},{"path":"/reference/getTESs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute TES — getTESs","text":"","code":"getTESs(ATM)"},{"path":"/reference/getTESs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute TES — getTESs","text":"ATM ATM structured returned getATM method","code":""},{"path":"/reference/getTESs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute TES — getTESs","text":"output named list contains list computed TESs, noise thresholds emerged lastly ATM structure.","code":""},{"path":"/reference/getTESs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute TES — getTESs","text":"","code":"net <- BoolNet::generateRandomNKNetwork(10, 2) attractors <- BoolNet::getAttractors(net)  ATM <- getATM(net, attractors) getTESs(ATM)  #> $TES #> $TES$level_0 #> $TES$level_0$TES_1 #> [1] \"a3\" #>  #>  #> $TES$level_1 #> $TES$level_1$TES_2 #> [1] \"a3\" #>  #>  #> $TES$level_2 #> $TES$level_2$TES_3 #> [1] \"a3\" #>  #>  #> $TES$level_3 #> $TES$level_3$TES_4 #> [1] \"a3\" #>  #> $TES$level_3$TES_5 #> [1] \"a6\" #>  #>  #> $TES$level_4 #> $TES$level_4$TES_6 #> [1] \"a3\" #>  #> $TES$level_4$TES_7 #> [1] \"a4\" #>  #> $TES$level_4$TES_8 #> [1] \"a5\" #>  #> $TES$level_4$TES_9 #> [1] \"a6\" #>  #>  #> $TES$level_5 #> $TES$level_5$TES_10 #> [1] \"a1\" #>  #> $TES$level_5$TES_11 #> [1] \"a2\" #>  #> $TES$level_5$TES_12 #> [1] \"a3\" #>  #> $TES$level_5$TES_13 #> [1] \"a4\" #>  #> $TES$level_5$TES_14 #> [1] \"a5\" #>  #> $TES$level_5$TES_15 #> [1] \"a6\" #>  #>  #> $TES$level_6 #> $TES$level_6$TES_16 #> [1] \"a1\" #>  #> $TES$level_6$TES_17 #> [1] \"a2\" #>  #> $TES$level_6$TES_18 #> [1] \"a3\" #>  #> $TES$level_6$TES_19 #> [1] \"a4\" #>  #> $TES$level_6$TES_20 #> [1] \"a5\" #>  #> $TES$level_6$TES_21 #> [1] \"a6\" #>  #>  #>  #> $thresholds #> [1] 0.00 0.10 0.23 0.77 0.80 0.90 1.00 #>  #> $ATM #> $ATM$ATM #>     a1  a2   a3  a4  a5   a6 #> a1 0.0 0.1 0.90 0.0 0.0 0.00 #> a2 0.1 0.0 0.90 0.0 0.0 0.00 #> a3 0.0 0.0 1.00 0.0 0.0 0.00 #> a4 0.0 0.0 0.80 0.1 0.1 0.00 #> a5 0.0 0.0 0.80 0.1 0.1 0.00 #> a6 0.0 0.0 0.77 0.0 0.0 0.23 #>  #> $ATM$lostFLips #> [1] 0 #>  #> $ATM$attractors #> $ATM$attractors$decimal #> $ATM$attractors$decimal$a1 #> $ATM$attractors$decimal$a1$involvedStates #>      [,1] #> [1,]   88 #>  #> $ATM$attractors$decimal$a1$basinSize #> [1] 1 #>  #>  #> $ATM$attractors$decimal$a2 #> $ATM$attractors$decimal$a2$involvedStates #>      [,1] #> [1,]   90 #>  #> $ATM$attractors$decimal$a2$basinSize #> [1] 1 #>  #>  #> $ATM$attractors$decimal$a3 #> $ATM$attractors$decimal$a3$involvedStates #>      [,1] [,2] #> [1,]  181  183 #>  #> $ATM$attractors$decimal$a3$basinSize #> [1] 898 #>  #>  #> $ATM$attractors$decimal$a4 #> $ATM$attractors$decimal$a4$involvedStates #>      [,1] [,2] #> [1,]  483  560 #>  #> $ATM$attractors$decimal$a4$basinSize #> [1] 28 #>  #>  #> $ATM$attractors$decimal$a5 #> $ATM$attractors$decimal$a5$involvedStates #>      [,1] [,2] #> [1,]  481  562 #>  #> $ATM$attractors$decimal$a5$basinSize #> [1] 28 #>  #>  #> $ATM$attractors$decimal$a6 #> $ATM$attractors$decimal$a6$involvedStates #>      [,1] [,2] [,3] [,4] [,5] [,6] #> [1,]  100  883  992  102  881  994 #>  #> $ATM$attractors$decimal$a6$basinSize #> [1] 68 #>  #>  #>  #> $ATM$attractors$binary #> $ATM$attractors$binary$a1 #>        [,1] #> Gene1     0 #> Gene2     0 #> Gene3     0 #> Gene4     1 #> Gene5     1 #> Gene6     0 #> Gene7     1 #> Gene8     0 #> Gene9     0 #> Gene10    0 #>  #> $ATM$attractors$binary$a2 #>        [,1] #> Gene1     0 #> Gene2     1 #> Gene3     0 #> Gene4     1 #> Gene5     1 #> Gene6     0 #> Gene7     1 #> Gene8     0 #> Gene9     0 #> Gene10    0 #>  #> $ATM$attractors$binary$a3 #>        [,1] [,2] #> Gene1     1    1 #> Gene2     0    1 #> Gene3     1    1 #> Gene4     0    0 #> Gene5     1    1 #> Gene6     1    1 #> Gene7     0    0 #> Gene8     1    1 #> Gene9     0    0 #> Gene10    0    0 #>  #> $ATM$attractors$binary$a4 #>        [,1] [,2] #> Gene1     1    0 #> Gene2     1    0 #> Gene3     0    0 #> Gene4     0    0 #> Gene5     0    1 #> Gene6     1    1 #> Gene7     1    0 #> Gene8     1    0 #> Gene9     1    0 #> Gene10    0    1 #>  #> $ATM$attractors$binary$a5 #>        [,1] [,2] #> Gene1     1    0 #> Gene2     0    1 #> Gene3     0    0 #> Gene4     0    0 #> Gene5     0    1 #> Gene6     1    1 #> Gene7     1    0 #> Gene8     1    0 #> Gene9     1    0 #> Gene10    0    1 #>  #> $ATM$attractors$binary$a6 #>        [,1] [,2] [,3] [,4] [,5] [,6] #> Gene1     0    1    0    0    1    0 #> Gene2     0    1    0    1    0    1 #> Gene3     1    0    0    1    0    0 #> Gene4     0    0    0    0    0    0 #> Gene5     0    1    0    0    1    0 #> Gene6     1    1    1    1    1    1 #> Gene7     1    1    1    1    1    1 #> Gene8     0    0    1    0    0    1 #> Gene9     0    1    1    0    1    1 #> Gene10    0    1    1    0    1    1 #>  #>  #>  #>"},{"path":"/reference/saveDotFileDifferentiationTree.html","id":null,"dir":"Reference","previous_headings":"","what":"Save differentiation tree's DOT representation into a file — saveDotFileDifferentiationTree","title":"Save differentiation tree's DOT representation into a file — saveDotFileDifferentiationTree","text":"saveDotFileDifferentiationTree saves DOT representation derived differentiation tree file.","code":""},{"path":"/reference/saveDotFileDifferentiationTree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save differentiation tree's DOT representation into a file — saveDotFileDifferentiationTree","text":"","code":"saveDotFileDifferentiationTree(DOTRep, filename, saveImage = TRUE)"},{"path":"/reference/saveDotFileDifferentiationTree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save differentiation tree's DOT representation into a file — saveDotFileDifferentiationTree","text":"DOTRep Representation TES-based differentiation tree computed using getDifferentiationTreeAsDOTString filename filename .gv file saveImage Logical parameter indicating whether saveDotFileDifferentiationTree produce also image tree, .svg format.","code":""},{"path":"/reference/saveDotFileDifferentiationTree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save differentiation tree's DOT representation into a file — saveDotFileDifferentiationTree","text":"None","code":""},{"path":"/reference/saveDotFileDifferentiationTree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save differentiation tree's DOT representation into a file — saveDotFileDifferentiationTree","text":"","code":"if (FALSE) { net <- BoolNet::generateRandomNKNetwork(10, 2) attractors <- BoolNet::getAttractors(net)  ATM <- getATM(net, attractors) TESs <- getTESs(ATM)  dotString <- getDifferentiationTreeAsDOTString(TESs) saveDotFileDifferentiationTree(dotString, \"exampleTree\") }"}]
